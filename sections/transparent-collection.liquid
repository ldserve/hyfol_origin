{%- capture section_settings -%}
	{
	"stackable": {% if section.settings.layout == 'vertical' and section.settings.stack_products == false %}false{% else %}true{% endif %},
	"layout": {{ section.settings.layout | json }}
	}
{%- endcapture -%}
<style>
  #shopify-section-{{ section.id }} div::-webkit-scrollbar {
    display: none !important;
  }
  #shopify-section-{{ section.id }} div::-webkit-scrollbar { width: 0 !important }
  #shopify-section-{{ section.id }} .point-item {
    display: inline-block;
    width: 10px;
    height: 10px;
    border: 1px solid #000;
    border-radius: 50%;
		margin-right: 20px;
		background: #FFFFFF;
  }
  #shopify-section-{{ section.id }} .point-item--active {
    background: #000;
  }
</style>
<section class="section" data-section-id="{{ section.id }}" data-section-type="featured-collection"
				 data-section-settings='{{ section_settings }}'>
	{%- assign collection = section.settings.collection -%}

	<div class="indexContainer">
				<h2 class="section__title heading h3 section--text-centered">{{ section.settings.title | default: collection.title | escape }}</h2>
	</div>

	<div class="indexContainer {% if section.settings.layout != 'vertical' or section.settings.stack_products %}container--flush{% endif %}">
		{%- capture product_list -%}
		<div
			class="product-list product-list--{{ section.settings.layout }} {% if section.settings.stack_products %}product-list--stackable{% elsif section.settings.layout == 'vertical' %}product-list--scrollable{% endif %}">
			{%- assign use_placeholder = true -%}

			{%- if collection == blank -%}
				{%- assign products = (1..section.settings.products_count) -%}
			{%- else -%}
				{%- assign products = collection.products -%}
				{%- assign use_placeholder = false -%}
			{%- endif -%}

			{%- for product in products limit: section.settings.products_count -%}
			{%- if section.settings.layout == 'vertical' -%}
			{%- assign products_per_row = section.settings.products_count | at_most: 6 -%}

			{%- if section.settings.stack_products -%}
				{%- capture grid_classes -%}1/2 1/4--lap 1/{{ products_per_row | minus: 1 }}--desk 1/{{ products_per_row }}--wide{%- endcapture -%}
			{%- else -%}
				{%- capture grid_classes -%}1/4--lap 1/{{ products_per_row | minus: 1 }}--desk 1/{{ products_per_row }}--wide{%- endcapture -%}
			{%- endif -%}

			{%- if use_placeholder -%}
				{%- include 'product-item-placeholder', product: product, grid_classes: grid_classes, show_add_to_cart: section.settings.show_quick_buy,only_show_transparent: true -%}
			{%- else -%}
				{%- include 'product-item', product: product, grid_classes: grid_classes, show_add_to_cart: section.settings.show_quick_buy,forloop:forloop,only_show_transparent: true,first_mkt_name:'{{ section.settings.title }}' -%}
			{%- endif -%}
			{%- elsif section.settings.layout == 'horizontal' -%}
			{%- if use_placeholder -%}
				{%- include 'product-item-placeholder', product: product, horizontal: true, grid_classes: '1/2--tablet 1/3--lap-and-up', show_add_to_cart: false,only_show_transparent: true -%}
			{%- else -%}
				{%- include 'product-item', product: product, horizontal: true, grid_classes: '1/2--tablet 1/3--lap-and-up', show_add_to_cart: false,forloop:forloop,only_show_transparent: true,first_mkt_name:'{{ section.settings.title }}' -%}
			{%- endif -%}
		{%- else -%}
		{%- assign mod = forloop.index0 | modulo: 3 -%}

			{%- if mod == 0 -%}
			<div class="product-list__column product-list__column--highlight">
				{%- elsif mod == 1 -%}
				<div class="product-list__column {% if forloop.last %}product-list__column--shrink{% endif %}">
					{%- endif -%}

					{%- if mod == 0 -%}
						{%- if use_placeholder -%}
							{%- include 'product-item-placeholder', product: product, show_add_to_cart: false -%}
						{%- else -%}
							{%- include 'product-item', product: product, show_add_to_cart: false,forloop:forloop,first_mkt_name:'Featured collection' -%}
						{%- endif -%}
					{%- else -%}
						{%- if use_placeholder -%}
							{%- include 'product-item-placeholder', product: product, horizontal: true, show_add_to_cart: false -%}
						{%- else -%}
							{%- include 'product-item', product: product, horizontal: true, show_add_to_cart: false,forloop:forloop,first_mkt_name:'Featured collection' -%}
						{%- endif -%}
					{%- endif -%}

					{%- if mod == 0 or mod == 2 or forloop.last -%}
				</div>
				{%- endif -%}
				{%- endif -%}
				{%- endfor -%}
			</div>
			{%- endcapture -%}

			{%- if section.settings.layout == 'vertical' and section.settings.stack_products == false -%}
				<div class="scroller">
					<div class="scroller__inner">
						{{ product_list }}
					</div>
					<div class="page-point section--text-centered">

					</div>
				</div>
			{%- else -%}
				{{ product_list }}
			{%- endif -%}
		</div>

		{%- comment -%}
			--------------------------------------------------------------------------------------
			QUICK VIEW CONTAINER
			--------------------------------------------------------------------------------------
		{%- endcomment -%}

		<div id="modal-quick-view-{{ section.id }}" class="modal" aria-hidden="true">
			<div class="modal__dialog modal__dialog--stretch" role="dialog">
				<button class="modal__close link" data-action="close-modal"
								title="{{ 'general.accessibility.close' | t | escape }}">
					{%- render 'icon', icon: 'close' -%}
				</button>

				<div class="modal__loader">
					{%- render 'icon', icon: 'search-loader' -%}
				</div>

				<div class="modal__inner"></div>
			</div>
		</div>
	</div>
</section>
<script>
    function ready(fn){
        if(document.addEventListener) {
            document.addEventListener('DOMContentLoaded', function() {
                document.removeEventListener('DOMContentLoaded',arguments.callee, false);
                fn();
            }, false);
        }
        // 如果IE
        else if(document.attachEvent) {
            // 确保当页面是在iframe中加载时，事件依旧会被安全触发
            document.attachEvent('onreadystatechange', function() {
                if(document.readyState == 'complete') {
                    document.detachEvent('onreadystatechange', arguments.callee);
                    fn();
                }
            });

            // 如果是IE且页面不在iframe中时，轮询调用doScroll 方法检测DOM是否加载完毕
            if(document.documentElement.doScroll && typeof window.frameElement === "undefined") {
                try{
                    document.documentElement.doScroll('left');
                }
                catch(error){
                    return setTimeout(arguments.callee, 20);
                };
                fn();
            }
        }
    }

    ready(() => {
        let box =document.getElementById('shopify-section-{{ section.id }}');
        let scrollerInner = box.querySelector('.scroller__inner')
        let flickitySlider =  box.querySelector('.flickity-slider');
        let itemList = box.querySelectorAll(".product-item");
        let pagePoint = box.querySelector('.page-point')
        // let itemWidth = window.getComputedStyle(itemList[0],null).getPropertyValue("width");
        let itemWidth = itemList[0].offsetWidth
        let clientWidth = window.innerWidth|| document.documentElement.clientWidth|| document.body.clientWidth;
        let onePageOfCount ;
        if(clientWidth <= 640) {
            onePageOfCount = 2
        }else if(clientWidth > 641 && clientWidth<= 999){
            onePageOfCount = 3
        }else if(clientWidth > 1000 && clientWidth<= 1279){
            onePageOfCount = 4
        }else if(clientWidth > 1280 && clientWidth<= 1440){
            onePageOfCount = 5
        }else if (clientWidth > 1440 ){
            onePageOfCount = 6
        }
        let pointCount = Math.ceil(itemList.length * itemWidth / clientWidth)
				let curStep = 0
				function drawPoint () {
            for (let i = 0; i < pointCount ; i++) {
								let pointItem = document.createElement('span')
                pointItem.classList = i === 0  ? 'point-item point-item--active':'point-item'
                pagePoint.appendChild(pointItem)
            }
				}
        function  activePoint() {
            let pointItem = pagePoint.querySelectorAll('span')
            let previousBtn = box.querySelector('.previous')
            let nextBtn = box.querySelector('.next')
            if(nextBtn){
                previousBtn.addEventListener('click',() =>{
                    curStep --
                    for (let i = 0; i < pointItem.length; i++){
                        pointItem[i].className = "point-item"
                    }
                    pointItem[curStep].classList = 'point-item point-item--active'
                })
                nextBtn.addEventListener('click',() =>{
                    curStep ++
                    for (let i = 0; i < pointItem.length; i++){
                        pointItem[i].className = "point-item"
                    }
                    pointItem[curStep].classList = 'point-item point-item--active'
                })
								return
            }
            scrollerInner.onscroll=function(){
                let scrollDistance = Math.ceil((scrollerInner.scrollLeft )/ clientWidth)
                for (var i = 0; i < pointItem.length; i++){
                    pointItem[i].className = "point-item"
                }
                pointItem[scrollDistance].classList = 'point-item point-item--active'
            }

				}
        drawPoint()
        activePoint()
    })

</script>
{% schema %}
	{
	"name": "首页透明集合",
	"settings": [
	{
	"type": "collection",
	"id": "collection",
	"label": "Collection"
	},
	{
	"type": "text",
	"id": "title",
	"label": "Heading",
	"default": "Featured collection"
	},
	{
	"type": "range",
	"id": "products_count",
	"label": "Products to show",
	"min": 4,
	"max": 50,
	"step": 1,
	"default": 12
	},
	{
	"type": "select",
	"id": "layout",
	"label": "Product grid layout",
	"options": [
	{
	"value": "vertical",
	"label": "Vertical"
	},
	{
	"value": "horizontal",
	"label": "Horizontal"
	},
	{
	"value": "collage",
	"label": "Collage"
	}
	],
	"default": "vertical"
	},
	{
	"type": "checkbox",
	"id": "stack_products",
	"label": "Stack products",
	"info": "Only applicable if layout is set to vertical",
	"default": false
	},
	{
	"type": "checkbox",
	"id": "show_quick_buy",
	"label": "Show quick buy",
	"default": false,
	"info": "Only shows if layout is set to vertical"
	},
	{
	"type": "text",
	"id": "link_title",
	"label": "Link title",
	"default": "View all"
	},
	{
	"type": "url",
	"id": "link_url",
	"label": "Link URL",
	"info": "If empty, the collection URL is used."
	}
	],
	"presets": [
	{
	"category": "Collection",
	"name": "首页透明集合",
	"settings": {}
	}
	]
	}
{% endschema %}